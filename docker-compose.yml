services:
  auth-service:
    build: ./auth-service
    container_name: imaginamos-auth-service
    env_file:
      - ./auth-service/.env
    ports:
      - "3001:3001"  
    command: [ "sh", "-c", "./wait-for.sh db 5432 -- npm run start:prod" ]
    depends_on:
      - db

  customers-service:
    build: ./customers-service
    container_name: imaginamos-customers-service
    env_file:
      - ./customers-service/.env
    ports:
      - "3005:3005"  
    command: [ "sh", "-c", "./wait-for.sh db 5432 -- npm run start:prod" ]
    depends_on:
      - db

  suppliers-service:
    build: ./suppliers-service
    container_name: imaginamos-suppliers-service
    env_file:
      - ./suppliers-service/.env
    ports:
      - "3003:3003"  
    command: [ "sh", "-c", "./wait-for.sh db 5432 -- npm run start:prod" ]
    depends_on:
      - db

  billing-service:
    build: ./billing-service
    container_name: imaginamos-billing-service
    env_file:
      - ./billing-service/.env
    ports:
      - "3004:3004"  
    command: [ "sh", "-c", "./wait-for.sh db 5432 -- npm run start:prod" ]
    depends_on:
      - db

  inventory-service:
    build: ./inventory-service
    container_name: imaginamos-inventory-service
    env_file:
      - ./inventory-service/.env
    ports:
      - "3002:3002"  
    command: [ "sh", "-c", "./wait-for.sh db 5432 -- npm run start:prod" ]
    depends_on:
      - db

  api-gateway:
    build: ./api-gateway
    container_name: imaginamos-api-gateway
    env_file:
      - ./api-gateway/.env
    ports:
      - "3000:3000"  
    command: [ "sh", "-c", "./wait-for.sh auth-service 3001 -- ./wait-for.sh customers-service 3005 -- ./wait-for.sh suppliers-service 3003 -- ./wait-for.sh billing-service 3004 -- ./wait-for.sh inventory-service 3002 -- npm run start:prod" ]
    depends_on:
      - auth-service
      - customers-service
      - suppliers-service
      - billing-service
      - inventory-service

  db:
    image: postgres:14
    container_name: imaginamos-db
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: imaginamos
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d imaginamos"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  db-data: